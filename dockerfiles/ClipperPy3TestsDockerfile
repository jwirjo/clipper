ARG CODE_VERSION
FROM clipper/lib_base:${CODE_VERSION}

# install docker
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install --fix-missing -y \
      wget apt-transport-https ca-certificates curl software-properties-common \
      openjdk-8-jdk clang-format redis-server \
      && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \
      && add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
      && apt-get update \
      && apt-get install -y docker-ce

RUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh \
    && wget --quiet 'https://repo.continuum.io/archive/Anaconda3-5.1.0-Linux-x86_64.sh' -O /tmp/anaconda3.sh \
    && /bin/bash /tmp/anaconda3.sh -b -p /opt/conda \
    && rm /tmp/anaconda3.sh

ENV PATH "/opt/conda/bin:$PATH"
RUN conda update -n base conda \
    && conda config --set ssl_verify no \
    && conda install -c anaconda cloudpickle=0.5.2 \
    && conda install -y libgcc pyzmq libsodium

# Install kubectl
RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \
      && chmod +x kubectl \
      && mv kubectl /usr/local/bin/

RUN pip install requests scikit-learn numpy pyyaml docker

COPY ./ /clipper

ENTRYPOINT ["/clipper/bin/run_unittests.sh", "-i"]

# vim: set filetype=dockerfile:
